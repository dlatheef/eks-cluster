name: Terraform CI/CD

on:
  push:
    branches:
      - eks-modules
  pull_request:
    branches:
      - eks-modules
  workflow_dispatch: # Allows manual triggers for destroy

jobs:
  terraform:
    name: 'Terraform and Deploy'
    runs-on: ubuntu-latest

    env:
      AWS_REGION: 'ap-south-1'  # Specify your AWS region
      TF_VERSION: '1.9.8'       # Specify your desired Terraform version

    steps:
    - name: 'Checkout GitHub repository'
      uses: actions/checkout@v3

    # Configure AWS credentials
    - name: 'Configure AWS credentials'
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: 'Set up Terraform'
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: 'Terraform Init'
      run: terraform init

    - name: 'Terraform Format'
      run: terraform fmt -check

    - name: 'Terraform Validate'
      run: terraform validate

    - name: 'Terraform Plan'
      run: terraform plan -out=tfplan

    - name: 'Terraform Apply'
      if: github.ref == 'refs/heads/eks-modules'
      run: terraform apply -auto-approve tfplan

  destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest

    env:
      AWS_REGION: 'ap-south-1'
      TF_VERSION: '1.9.8'

    steps:
    - name: 'Checkout GitHub repository'
      uses: actions/checkout@v3

    # Configure AWS credentials
    - name: 'Configure AWS credentials'
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: 'Set up Terraform'
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: 'Terraform Init'
      run: terraform init

    - name: 'Terraform Destroy Plan'
      run: terraform plan -destroy -out=destroyplan

    - name: 'Terraform Destroy'
      if: github.event_name == 'workflow_dispatch'
      run: terraform apply -auto-approve destroyplan

